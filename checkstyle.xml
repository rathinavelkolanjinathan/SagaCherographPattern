<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd">



<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="warnings"/>
    <property name="fileExtensions" value="java, properties, xml"/>
    <!-- check for whitespace -->

    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <module name="TressWalker">
    <module name="OuterTypeFilename"/>
        <module name="illegalTokenText">
		<property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
        <property name="format"
                  value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47|134)"/>
        <property name="message"
                  value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>
    </module>

    <module name="AvoidEscapedUnicodeCharacters">
        <property name="allowedEscapesForControlCharacters" value="true"/>
        <property name="allowedByTailComment" value="true"/>
        <property name="allowNonPrintableEscapes" value="true"/>

    </module>

        <module name="LineLength">
            <property name="max" value="140"/>
            <property name="ignorePattern" value="^package.*import.*|a href|href|http://http://|ftp://"/>

        </module>

        <module name="AvoidStartImport"/>
        <module name="OneTopLevelClass"/>
        <module name="NoLineWrap"/>

        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens"
                     value="LITERAL_TRY,LITERAL_FINALLY,LITERAL_IF,LITERAL_ELSE,LITERAL_SWITCH"/>
        </module>
        <module name="NeedBraces"/>
        <module name="LeftCurly"/>
        <module name="RightCurly">
            <property name="id" value="RightCurlySame"/>
            <property name="tokens"
                     value="LITERAL_TRY,LITERAL_CATCH,LITERAL_FINALLY,LITERAL_LIF,LITERAL_ELSE,LITERAL_DO"/>
        </module>

        <module name="RightCurly">
            <property name="id" value="RightCurlyAlone"/>
            <module name="option" value="alone"/>
            <property name="tokens"
                     value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,INSTANCE_INIT"/>
        </module>

        <module name="WhitespaceAround">
            <property name="allowedEmptyConstructors" value="true"/>
            <module name="allowedEmptyMethods" value="true"/>
            <module name="allowedEmptyTypes" value="true"/>
            <module name="allowedEmptyLoops" value="true"/>
            <message key ="ws.notFollowed" value="WhitespaceAround: ''{0}'' is not followed by whitespace.Empty blocks may be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
            <property name="ws.notPreceded"
                     value="WhitespaceAround: ''{0}'' is not precede with whitespace"/>
        </module>

        <module name="oneStatementPerLine" />
        <module name="MultipleVariableDeclaration" />
        <module name="ArrayTypeStyle" />
        <module name="MissingSwitchDefault" />
        <module name="FallThrough" />
        <module name="UpperEll" />
        <module name="ModifierOrder" />
        <module name="EmptyLineSeparator" >
            <property name="allowedNoEmptyLineBetweenFields"
                     value="true"/>
        </module>

        <module name="SeparatorWrap" >
            <property name="id" value="SeparatorWrapComma"/>
            <property name="tokens" value="ELLIPSIS"/>
            <property name="option" value="EOL"/>
        </module>
<!--  ARRAY DELCRATOR IS EOL until https://github.com/google/styleguid/issues/259 -->
        <module name="SeparatorWrap" >
            <property name="id" value="SeparatorWrapArrayDeclarator"/>
            <property name="tokens" value="ARRAY_DECLARATOR"/>
            <property name="option" value="EOL"/>
        </module>

        <module name="SeparatorWrap" >
            <property name="id" value="SeparatorWrapMethodRef"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>

        <module name="packageName" >
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key ="name.invalidPattern"
                     value="Package name ''{0}'' must match pattern ''{}''."/>
        </module>

        <module name="TypeName" >

            <message key ="name.invalidPattern"
                     value="Type name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="MemberName" >
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key ="name.invalidPattern"
                     value="Member name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="ParameterName" >
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key ="name.invalidPattern"
                     value="Parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="CatchParameterName" >
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key ="name.invalidPattern"
                     value="Catch Parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="LocalVariableName" >
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key ="name.invalidPattern"
                     value="Local variable name ''{0}'' must match pattern ''{1}''."/>
        </module>


        <module name="CassTypeParameterName" >
            <property name="format" value="^[A-Z][0-9]$|([A-Z][a-zA-Z0-9]*[T]$"/>
            <message key ="name.invalidPattern"
                     value="class type name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="InterfaceTypeParameterName" >
            <property name="format" value="^[A-Z][0-9]$|([A-Z][a-zA-Z0-9]*[T]$"/>
            <message key ="name.invalidPattern"
                     value="Interface type name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="NoFinalizer" />
        <module name="GenericWhiteSpace">
            <message key ="ws.followed"
                     value="GenericWhitespace ''{0}''is followed by whitespace."/>
            <message key ="ws.preceded"
                     value="GenericWhitespace ''{0}''is preceded by whitespace."/>
            <message key ="ws.illegalFollow"
                     value="GenericWhitespace ''{0}''is illegalFollow by whitespace."/>
            <message key ="ws.notPreceded"
                     value="GenericWhitespace ''{0}''is notPreceded by whitespace."/>
        </module>

        <module name="Indentation" >
            <property name="basicOffset" value="2"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="2"/>
            <property name="throwsIndent" value="4"/>
            <property name="lineWrappingIndentation" value="4"/>
            <property name="arrayInitIndent" value="2"/>
        </module>

        <module name="VariableDeclarationUsageDistance"/>
            <module name="CustomImportOrder" >
                <property name="sortImportsInGroupAlphabetically" value="false"/>
                <property name="separateLineBetweenGroups" value="true"/>
                <property name="customImportOrderRules" value="STATIC###THIRD_PARTY_PACKAGE"/>

            </module>

        <module name="MethodParamPad"/>
        <module name="NoWhitespaceBefore" >
            <property name="tokens" value="COMMA, SEMI,POST_DEC,DOT,ELLIPSIS ,METHOD_REF"/>
            <property name="allowLineBreaks" value="true"/>

        </module>

        <module name="ParenPad" />
        <module name="OperatorWrap" >
            <property name="option" value="NL"/>
            <property name="tocken" value="BAND,BOR,BSR,BXOR,DIV,EQUAL,GE,GT,LAND,LE,LITERAL_INSTANCEOF,LOR,LT,MIMUS,MOD,NOT_EQUAL,PLUS,QUESTION,SL,SR,STAR,METHOD_REF"/>
        </module>

        <module name="AnnotationLocation" >
            <property name="id" value="annotationLocationVariable"/>
            <property name="tokens" value="CLASS_DEF,INTERFACE_DEF,ENUM_DEF,METHOD_DEF,CTOR_DEF"/>
        </module>

        <module name="AnnotationLocation" >
            <property name="id" value="annotationLocationVariable"/>
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>

        <module name="NonEmptyAtclauseDescription"/>
        <module name="JavadocTagContinuationIndentation"/>
        <module name="SummaryJavadoc">
            <property name="forbiddenSummaryFragments"
                     value="^@return the *|^this method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a)"/>
        </module>

        <module name="JavadocParagraph"/>
        <module name="AtclauseOrder">

            <property name="tagOrder"
                     value="@param, @return,@throws,@deprecated"/>
            <property name="tagOrder"
                     value="CLASS_DEF,INTERFACE_DEF,ENUM_DEF,METHOD_DEF,CTOR_DEF,CTOR_DEF,VARIABLE_DEF"/>
        </module>

        <module name="JavadocMethod">

            <property name="scope" value="public"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingThrowsTags" value="true"/>
            <property name="allowMissingReturnTags" value="true"/>
            <property name="minLineCount" value="2"/>
            <property name="allowAnnotations" value="Override, Test"/>
            <property name="allowThrowsTagsFORSubclasses" value="true"/>

        </module>

        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <property name="name.invalidPattern"
                     value="Method name  ''{0}'' must match pattern ''{1}''. "/>

        </module>
        <module name="SingleLineJavadoc">
            <property name="ignoreInlineTgs" value="false"/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName"
                     value="expected"/>

        </module>
        <module name="commentsIndentation"/>
        <module name="SuppressionFilter">
            <property name="file"
                     value="checkstyle-suppression.xml"/>

        </module>

</module>
</module>